---

role_name_check: 1

dependency:
  name: galaxy

driver:
  name: docker

platforms:
  - name: instance
    image: "ghcr.io/bodsch/docker-ansible/ansible-${DISTRIBUTION:-debian:12}"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    docker_host: "${DOCKER_HOST:-unix://run/docker.sock}"
    privileged: true
    pre_build_image: true
    cgroupns_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - /var/lib/containerd
    capabilities:
      - SYS_ADMIN
    tmpfs:
      - /run
      - /tmp
    published_ports:
      - 389:389
      - 636:636
      - 5555:5555

provisioner:
  name: ansible
  ansible_args:
    - --diff
    # - -v
  config_options:
    defaults:
      deprecation_warnings: true
      # callback_result_format: yaml
      callbacks_enabled: profile_tasks
      stdout_callback: community.general.diy
      gathering: smart
      fact_caching: jsonfile
      fact_caching_timeout: 8640
      fact_caching_connection: ansible_facts
    callback_diy:
      msg_ok: "
        OK: {{ ansible_callback_diy.task.name }} auf {{ ansible_callback_diy.result._host }}
        Ergebnis:
          {{ ansible_callback_diy.result | to_nice_yaml }}"
      # msg_ok: ""
      msg_skipped: ""
      msg_unreachable: "Host {{ ansible_callback_diy.result._host }} nicht erreichbar"
      msg_failed: "Fehler bei Task {{ ansible_callback_diy.task.name }}"

scenario:
  test_sequence:
    - destroy
    - dependency
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - destroy

verifier:
  name: testinfra
