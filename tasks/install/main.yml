---

- name: detect binary file for glauth
  delegate_to: "{{ glauth_delegate_to }}"
  become: false
  run_once: "{{ 'false' if glauth_direct_download else 'true' }}"
  ansible.builtin.find:
    paths: "{{ glauth_local_tmp_directory }}"
    file_type: file
    patterns:
      - "glauth"
      - "glauth-linux-amd64"
    recurse: true
  register: _detected_binary

- name: detect glauth plugins
  delegate_to: "{{ glauth_delegate_to }}"
  become: false
  run_once: "{{ 'false' if glauth_direct_download else 'true' }}"
  ansible.builtin.find:
    paths: "{{ glauth_local_tmp_directory }}"
    file_type: file
    patterns:
      - "*.so"
    recurse: true
  register: _detected_plugins

- name: define plugin list
  ansible.builtin.set_fact:
    glauth_plugins: "{{ _detected_plugins.files | glauth_plugins }}"
  when:
    - _detected_plugins.files is defined
    - _detected_plugins.files | count > 0

- name: create glauth lib directory
  become: true
  ansible.builtin.file:
    state: directory
    path: "{{ glauth_data_dir }}"
    mode: 0755

- name: install glauth
  ansible.builtin.include_tasks: install/glauth.yml
  when:
    - _detected_binary.files is defined
    - _detected_binary.files | count > 0

- name: install plugins
  ansible.builtin.include_tasks: install/plugins.yml
  when:
    - glauth_plugins | count > 0

- name: create local facts
  become: true
  ansible.builtin.template:
    src: ansible_facts.j2
    dest: /etc/ansible/facts.d/glauth.fact
    mode: 0755

- name: python support
  when:
    - glauth_python_packages is defined
    - glauth_python_packages | length > 0
  block:
    - name: create requirements.txt
      ansible.builtin.template:
        src: requirements.txt.j2
        dest: /tmp/glauth-requirements.txt
        mode: 0660

    - name: ensure python bindings for glauth packages 1st
      ansible.builtin.pip:
        requirements: /tmp/glauth-requirements.txt
        state: present
        executable: pip{{ '3' if ansible_python.version.major | int == 3 else '' }}
      register: pip_install
      ignore_errors: true
      no_log: true

    - name: first run is failed, try with build
      when:
        - pip_install.failed
      block:
        - name: install build essentials
          ansible.builtin.package:
            name: "{{ glauth_build_packages }}"
            state: present

        - name: ensure python bindings for glauth packages 2nd
          ansible.builtin.pip:
            requirements: /tmp/glauth-requirements.txt
            state: present
            executable: pip{{ '3' if ansible_python.version.major | int == 3 else '' }}

        - name: uninstall build essentials
          ansible.builtin.package:
            name: "{{ glauth_build_packages }}"
            state: absent

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:
    - name: create systemd service unit
      become: true
      ansible.builtin.template:
        src: "init/systemd/glauth.service.j2"
        dest: "{{ systemd_lib_directory }}/glauth.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart glauth

    - name: create glauth run configuration
      become: true
      ansible.builtin.template:
        src: "glauth.j2"
        dest: "{{ glauth_defaults_directory }}/glauth"
        force: true
        owner: root
        group: "{{ glauth_system_group }}"
        mode: 0640
      notify:
        - validate config
        - restart glauth

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
  block:
    - name: create openrc service configuration
      become: true
      ansible.builtin.template:
        src: "init/openrc/conf.d/glauth.j2"
        dest: "/etc/conf.d/glauth"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      become: true
      ansible.builtin.template:
        src: "init/openrc/init.d/glauth.j2"
        dest: "/etc/init.d/glauth"
        owner: root
        group: root
        mode: 0750


...
