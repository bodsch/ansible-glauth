
TOX_ARGS=

if [ -n "${TOX_SCENARIO}" ]
then
  TOX_ARGS="--scenario-name ${TOX_SCENARIO}"
fi

TOX_OPTS="-e ${TOX_ANSIBLE}"

exit_hook() {
  rc=$?

  echo "trap signal $rc"

  [ -e "${HOME}/.ansible/roles/${namespace}.${name}" ] && rm --force "${HOME}/.ansible/roles/${namespace}.${name}"
  [ -e "${HOME}/.ansible/roles/${role_base_name}" ] && rm --force "${HOME}/.ansible/roles/${role_base_name}"

  exit $rc;
}

# trap --list
trap exit_hook EXIT SIGHUP SIGINT SIGTERM

mkdir -p ${HOME}/.ansible/roles

role_base_name=$(basename $(pwd))

ln -sfn "$(pwd)" "${HOME}/.ansible/roles/${role_base_name}"

if [ -f meta/main.yml ]
then
  name=$(grep ".*role_name:" meta/main.yml | awk "{ print \$2 }")
  namespace=$(grep ".*namespace:" meta/main.yml | awk "{ print \$2 }")

  echo ""
  echo "ansible role: ${namespace}.${name}"

  ln -sfn "$(pwd)" "${HOME}/.ansible/roles/${namespace}.${name}"
fi

current_dir=$(pwd)

TOX_TEST="${1}"

if [ -f "./collections.yml" ]
then
  echo ""
  ${current_dir}/hooks/manage_collections.py --scenario ${TOX_SCENARIO:-default}
  echo ""
fi
